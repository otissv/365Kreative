// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "contact_form",
    columns: [
      { name: "email", type: "email", defaultValue: "null@null" },
      { name: "message", type: "text", notNull: true, defaultValue: "null" },
      { name: "read", type: "bool", notNull: true, defaultValue: "false" },
      { name: "name", type: "string" },
    ],
  },
  {
    name: "subscribe",
    columns: [
      { name: "verified", type: "bool", notNull: true, defaultValue: "false" },
      { name: "email", type: "email", unique: true },
      { name: "token", type: "string", unique: true },
      { name: "token_expiry", type: "datetime" },
      { name: "name", type: "string", notNull: true, defaultValue: "null" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type ContactForm = InferredTypes["contact_form"];
export type ContactFormRecord = ContactForm & XataRecord;

export type Subscribe = InferredTypes["subscribe"];
export type SubscribeRecord = Subscribe & XataRecord;

export type DatabaseSchema = {
  contact_form: ContactFormRecord;
  subscribe: SubscribeRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Otis-Virginie-s-workspace-ir3drk.eu-west-1.xata.sh/db/365kreative",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
